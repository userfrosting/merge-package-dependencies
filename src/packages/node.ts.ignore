import { Package, IPackageLiteral, IDependencies } from "./common.js";
import extend from "just-extend";

export abstract class NodePackage<TPackageLiteral extends INodePackageLiteral> extends Package {
    readonly #pkg: TPackageLiteral;

    constructor(pkg: TPackageLiteral) {
        super();

        // Deeply clone package literal object to avoid mutation leak issues
        this.#pkg = extend({}, pkg);
    }

    public merge(pkg: this): void {
        // todo
    }
}

export interface INodePackageLiteral extends IPackageLiteral {
    /**
     * Dependencies the package is compatible with and may use if available.
     */
    peerDependencies?: IDependencies;

    /**
     * Dependencies install in all compatible environments and by packages including this package.
     */
    optionalDependencies?: IDependencies;
}
